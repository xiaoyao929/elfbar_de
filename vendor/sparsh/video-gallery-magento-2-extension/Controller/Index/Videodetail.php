<?php

/**
 * PHP version 7.1
 *
 * @category  Sparsh
 * @package   Sparsh_VideoGallery
 * @author    Sparsh <magento@sparsh-technologies.com>
 * @copyright 2019 This file was generated by Sparsh
 * @license   https://www.sparsh-technologies.com  Open Software License (OSL 3.0)
 * @link      https://www.sparsh-technologies.com
 */

namespace Sparsh\VideoGallery\Controller\Index;
 
use Magento\Framework\App\Action\Context;

/**
 * PHP version 7.1
 *
 * @category  Sparsh
 * @package   Sparsh_VideoGallery
 * @author    Sparsh <magento@sparsh-technologies.com>
 * @copyright 2019 This file was generated by Sparsh
 * @license   https://www.sparsh-technologies.com  Open Software License (OSL 3.0)
 * @link      https://www.sparsh-technologies.com
 */

class Videodetail extends \Magento\Framework\App\Action\Action
{

    /**
     * @var videoFactory|\Sparsh\VideoGallery\Model\VideoFactory
     */
    protected $_videoFactory;

    /**
     * @var PageFactory|\Magento\Framework\View\Result\PageFactory
     */
    protected $_resultPageFactory;
 
    /**
     * Initialize
     *
     * @param Action\Context $context           Initialize Context
     * @param videoFactory   $videoFactory      Initialize videoFactory
     * @param PageFactory    $resultPageFactory Initialize resultfactory
     */
    public function __construct(
        Context $context,
        \Sparsh\VideoGallery\Model\VideoFactory $videoFactory,
        \Magento\Framework\View\Result\PageFactory $resultPageFactory
    ) {
        $this->_videoFactory = $videoFactory;
        $this->_resultPageFactory = $resultPageFactory;
        parent::__construct($context);
    }
 
    /**
     * Return to page
     *
     * @return \Magento\Backend\Model\View\Result\Page|\Magento\Backend\Model\View\Result\Redirect
     */
    public function execute()
    {
        $resultPage = $this->_resultPageFactory->create();
        return $resultPage;
    }

    /**
     * Chech Record Exist or not
     *
     * @param int $Id ID
     *
     * @return boolean
     */
    public function checkCollectionId($Id)
    {
        $videoInfo = $this->_videoFactory->create()->getCollection();
        $videoInfo->addFieldToFilter('id', $Id);
        $videoInfoFirstItem = $videoInfo->getFirstItem();
        $data = $videoInfoFirstItem->getData();
        if (empty($data)) {
            $this->_redirect('404notfound');
        }
    }
}
